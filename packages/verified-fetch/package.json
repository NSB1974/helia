{
  "name": "@helia/verified-fetch",
  "version": "0.0.0",
  "description": "A fetch-like API for IPFS content on the web.",
  "license": "Apache-2.0 OR MIT",
  "homepage": "https://github.com/ipfs/helia/tree/main/packages/verified-fetch#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ipfs/helia.git"
  },
  "bugs": {
    "url": "https://github.com/ipfs/helia/issues"
  },
  "publishConfig": {
    "access": "public",
    "provenance": true
  },
  "keywords": [
    "IPFS",
    "fetch",
    "helia"
  ],
  "type": "module",
  "types": "./dist/src/index.d.ts",
  "files": [
    "src",
    "dist",
    "!dist/test",
    "!**/*.tsbuildinfo"
  ],
  "exports": {
    ".": {
      "types": "./dist/src/index.d.ts",
      "import": "./dist/src/index.js"
    }
  },
  "eslintConfig": {
    "extends": "ipfs",
    "parserOptions": {
      "project": true,
      "sourceType": "module"
    }
  },
  "scripts": {
    "clean": "aegir clean",
    "lint": "aegir lint",
    "dep-check": "aegir dep-check",
    "build": "aegir build",
    "test": "aegir test",
    "test:chrome": "aegir test -t browser --cov",
    "test:chrome-webworker": "aegir test -t webworker",
    "test:firefox": "aegir test -t browser -- --browser firefox",
    "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
    "test:node": "aegir test -t node --cov",
    "test:electron-main": "aegir test -t electron-main"
  },
  "dependencies": {
    "@helia/block-brokers": "^1.0.0-163df38",
    "@helia/http": "next",
    "@helia/interface": "^3.0.1",
    "@helia/ipns": "^4.0.0",
    "@helia/routers": "^0.0.0-163df38",
    "@helia/unixfs": "^2.0.1",
    "@libp2p/peer-id": "^4.0.5",
    "mime-types": "^2.1.35",
    "multiformats": "^13.0.0"
  },
  "devDependencies": {
    "@types/mime-types": "^2.1.4",
    "@types/sinon": "^17.0.2",
    "aegir": "^42.1.0",
    "helia": "^3.0.1",
    "ipfsd-ctl": "^13.0.0",
    "kubo": "^0.25.0",
    "kubo-rpc-client": "^3.0.2"
  },
  "browser": {
    "node:buffer": false,
    "node:stream": false
  }
}
